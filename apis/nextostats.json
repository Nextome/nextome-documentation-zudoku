{
    "openapi": "3.0.1",
    "info": {
      "title": "Nextostats",
      "contact": {
        "name": "Nextome",
        "url": "https://www.nextome.com"
      },
      "version": "3.5.1.beta"
    },
    "servers": [
      {
        "url": "http://localhost:8080",
        "description": "Generated server url"
      }
    ],
    "security": [
      {
        "OAuth 2.0": []
      }
    ],
    "tags": [
      {
        "name": "Location Providers",
        "description": "Location Providers are the entities that provide location data to the system"
      },
      {
        "name": "Rooms",
        "description": "Operations on rooms"
      },
      {
        "name": "Locations",
        "description": "Operations on locations, also called positions"
      },
      {
        "name": "Maps",
        "description": "Operations on maps"
      },
      {
        "name": "Visits",
        "description": "Operations on visits, the events that occur when a tracked element enters or exits a certain room"
      },
      {
        "name": "Trackables",
        "description": "Trackable are the objects that can be tracked in the system"
      },
      {
        "name": "Venue Categories",
        "description": "Venue Category CRUD"
      },
      {
        "name": "Features",
        "description": "Feature CRUD"
      },
      {
        "name": "Venue categories",
        "description": "Get all of the venue categories associated to the venue"
      },
      {
        "name": "Gateways",
        "description": "Gateways are the devices that receive signals from beacons"
      },
      {
        "name": "Fences",
        "description": "Fences are areas in which tracked elements generate events"
      },
      {
        "name": "Venues",
        "description": "Venues are the physical venues where the system operates"
      }
    ],
    "paths": {
      "/venues/{vid}": {
        "get": {
          "tags": [
            "Venues"
          ],
          "summary": "Get a venue by its ID",
          "operationId": "getById",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Venues"
          ],
          "operationId": "update",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Venues"
          ],
          "operationId": "delete",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "/venuecategories/{vcid}": {
        "put": {
          "tags": [
            "Venue Categories"
          ],
          "summary": "Updates venue category's attributes",
          "operationId": "update_1",
          "parameters": [
            {
              "name": "vcid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueCategoryDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "/trackables/{tid}": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "operationId": "get_1",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/TrackableDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Trackables"
          ],
          "operationId": "update_2",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackableDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/TrackableDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Trackables"
          ],
          "operationId": "delete_2",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        }
      },
      "/trackables/{tid}/provider": {
        "put": {
          "tags": [
            "Trackables"
          ],
          "operationId": "updateProvider",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationProviderSimpleDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        }
      },
      "/rooms/{rid}": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "operationId": "getRoom",
          "parameters": [
            {
              "name": "rid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Rooms"
          ],
          "operationId": "updateRoom",
          "parameters": [
            {
              "name": "rid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Rooms"
          ],
          "operationId": "deleteRoom",
          "parameters": [
            {
              "name": "rid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/providers/{lpid}": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "get_2",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationProviderDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "update_3",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationProviderDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationProviderDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "delete_3",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/providers/{lpid}/battery": {
        "put": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "updateBatteryLevel",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "batteryLevel",
              "in": "query",
              "required": true,
              "schema": {
                "maximum": 100,
                "minimum": 0,
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "updatedAt",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/providers/beaconring": {
        "put": {
          "tags": [
            "Location Providers"
          ],
          "summary": "Ring a kkm Beacon device",
          "operationId": "ringKBeacon",
          "parameters": [
            {
              "name": "uuid",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "major",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "minor",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "/maps/{mid}": {
        "get": {
          "tags": [
            "Maps"
          ],
          "operationId": "getById_1",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/MapDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Maps"
          ],
          "operationId": "update_4",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/MapDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Maps"
          ],
          "operationId": "delete_4",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/maps/{mid}/walkable-matrix": {
        "get": {
          "tags": [
            "Maps"
          ],
          "operationId": "getWalkableMatrix",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/WalkableMatrixDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Maps"
          ],
          "operationId": "updateWalkableMatrix",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalkableMatrixDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/gateways/{gid}": {
        "get": {
          "tags": [
            "Gateways"
          ],
          "operationId": "getGateway",
          "parameters": [
            {
              "name": "gid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GatewayDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Gateways"
          ],
          "operationId": "update_5",
          "parameters": [
            {
              "name": "gid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GatewayDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Gateways"
          ],
          "operationId": "delete_5",
          "parameters": [
            {
              "name": "gid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/fences/{fid}": {
        "get": {
          "tags": [
            "Fences"
          ],
          "operationId": "get_3",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FenceDto"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Fences"
          ],
          "operationId": "update_6",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FenceDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FenceDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Fences"
          ],
          "operationId": "delete_6",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        }
      },
      "/features/{fid}": {
        "put": {
          "tags": [
            "Features"
          ],
          "summary": "Updates feature's attributes",
          "operationId": "update_7",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FeatureDto"
                  }
                }
              }
            }
          }
        }
      },
      "/venues": {
        "post": {
          "tags": [
            "Venues"
          ],
          "operationId": "create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueDto"
                  }
                }
              }
            }
          }
        }
      },
      "/venuecategories": {
        "get": {
          "tags": [
            "Venue Categories"
          ],
          "summary": "Get all venue categories",
          "description": "Returns all venue categories",
          "operationId": "list",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VenueCategoryDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Venue Categories"
          ],
          "summary": "Creates a new venue category",
          "operationId": "save",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueCategoryDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "/trackables": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "operationId": "list_1",
          "parameters": [
            {
              "name": "venue",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/TrackableDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Trackables"
          ],
          "operationId": "create_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackableDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/TrackableDto"
                  }
                }
              }
            }
          }
        }
      },
      "/rooms": {
        "post": {
          "tags": [
            "Rooms"
          ],
          "operationId": "createRoom",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/RoomDto"
                  }
                }
              }
            }
          }
        }
      },
      "/providers": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "list_2",
          "parameters": [
            {
              "name": "venue",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationProviderDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "create_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationProviderDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationProviderDto"
                  }
                }
              }
            }
          }
        }
      },
      "/maps": {
        "post": {
          "tags": [
            "Maps"
          ],
          "operationId": "create_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/MapDto"
                  }
                }
              }
            }
          }
        }
      },
      "/maps/{mid}/gcps": {
        "get": {
          "tags": [
            "Maps"
          ],
          "summary": "Get all map's GCPs",
          "operationId": "getGcps",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GcpsDto"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Maps"
          ],
          "summary": "Add one or more new GCPs to a map",
          "operationId": "setGcps",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GcpDto"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GcpsDto"
                  }
                }
              }
            }
          }
        }
      },
      "/locations": {
        "post": {
          "tags": [
            "Locations"
          ],
          "operationId": "createLocation",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/locations/list": {
        "post": {
          "tags": [
            "Locations"
          ],
          "operationId": "createLocations",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDto"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      },
      "/gateways": {
        "get": {
          "tags": [
            "Gateways"
          ],
          "operationId": "list_3",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GatewayDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Gateways"
          ],
          "operationId": "create_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GatewayDto"
                  }
                }
              }
            }
          }
        }
      },
      "/fences": {
        "get": {
          "tags": [
            "Fences"
          ],
          "operationId": "list_4",
          "parameters": [
            {
              "name": "venue",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "map",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FenceDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Fences"
          ],
          "operationId": "create_5",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FenceDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FenceDto"
                  }
                }
              }
            }
          }
        }
      },
      "/features": {
        "get": {
          "tags": [
            "Features"
          ],
          "summary": "Get all features",
          "description": "Returns all features",
          "operationId": "list_5",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FeatureDto"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Features"
          ],
          "summary": "Creates a new feature",
          "description": "Creates a new feature",
          "operationId": "save_1",
          "parameters": [
            {
              "name": "venue",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FeatureDto"
                  }
                }
              }
            }
          }
        }
      },
      "/visit/snapshot/{mapId}": {
        "get": {
          "tags": [
            "Visits"
          ],
          "summary": "Get the snapshot of visits of a map.You must specify the time range (tol) of the snapshot and the time unit.Optionally, you can filter by a specific provider type.",
          "operationId": "getSnapshot",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "t",
              "in": "query",
              "description": "Tolerance amount",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer",
                "format": "int32",
                "default": 15
              }
            },
            {
              "name": "ut",
              "in": "query",
              "description": "Tolerance unit",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VisitDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/visit/history/{venueId}": {
        "get": {
          "tags": [
            "Visits"
          ],
          "summary": "Get the history of visits of a venue.You must specify also the start time, optionally the end time (otherwise actual Utc time is taken).the 'field' parameter is used to compare start and end times with the start(1) or end(2) or both(3) fields of the visit.Optionally, cause the result rows will be paginated, you can specify the page number and the page size.Optionally, you can filter by a specific provider type.",
          "operationId": "getHistoryByVenueId",
          "parameters": [
            {
              "name": "venueId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "start",
              "in": "query",
              "required": false,
              "schema": {
                "minimum": 0,
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "end",
              "in": "query",
              "required": false,
              "schema": {
                "minimum": 0,
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "w",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "START",
                  "END",
                  "BOTH"
                ],
                "default": "BOTH"
              }
            },
            {
              "name": "t",
              "in": "query",
              "description": "Tollerance amount",
              "required": false,
              "schema": {
                "minimum": 1,
                "type": "integer",
                "format": "int32",
                "default": 15
              }
            },
            {
              "name": "ut",
              "in": "query",
              "description": "Tollerance unit",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 0
              }
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "maximum": 500,
                "minimum": 0,
                "type": "integer",
                "format": "int32",
                "default": 250
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/PairBooleanListVisitDto"
                  }
                }
              }
            }
          }
        }
      },
      "/visit/average-duration/{mapId}": {
        "get": {
          "tags": [
            "Visits"
          ],
          "summary": "Get average duration of visits of a map.Optionally, you can filter by a specific provider type.",
          "operationId": "getAverageDurationByMapId",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "/venues/{vid}/venuecategories": {
        "get": {
          "tags": [
            "Venues",
            "Venue categories"
          ],
          "operationId": "getVenueCategories",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/VenueCategoryDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/venuecategories/{venueCategoryId}": {
        "get": {
          "tags": [
            "Venue Categories"
          ],
          "summary": "Get venue category",
          "operationId": "get",
          "parameters": [
            {
              "name": "venueCategoryId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/VenueCategoryDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Venue Categories"
          ],
          "summary": "Delete venue category",
          "operationId": "delete_1",
          "parameters": [
            {
              "name": "venueCategoryId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/trackables/{tid}/positions": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "operationId": "getLocations",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/trackables/{tid}/position": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "operationId": "getLatestLocation",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationDto"
                  }
                }
              }
            }
          }
        }
      },
      "/trackables/{tid}/fences": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "operationId": "getFences",
          "parameters": [
            {
              "name": "tid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FenceDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/trackables/{mapId}/snapshot": {
        "get": {
          "tags": [
            "Trackables"
          ],
          "summary": "Get trackable snapshot",
          "description": "Get the last position in the map for each trackable.\u003Cbr\u003EIf needed, you can filter by location provider's type",
          "operationId": "getSnapshot_1",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "t",
              "in": "query",
              "description": "Tollerance amount",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 15
              }
            },
            {
              "name": "ut",
              "in": "query",
              "description": "Tollerance unit",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            },
            {
              "name": "venueId",
              "in": "query",
              "description": "Venue",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/rooms/by-map/{mid}": {
        "get": {
          "tags": [
            "Rooms"
          ],
          "operationId": "getRoomsByMap",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RoomDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/providers/{lpid}/trackable": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "getTrackable",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/TrackableDto"
                  }
                }
              }
            }
          }
        }
      },
      "/providers/{lpid}/position": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "getLocation",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationDto"
                  }
                }
              }
            }
          }
        }
      },
      "/providers/{lpid}/fences": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "getFences_1",
          "parameters": [
            {
              "name": "lpid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FenceDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/providers/by-omlox/{omloxId}": {
        "get": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "getByOmloxId",
          "parameters": [
            {
              "name": "omloxId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/LocationProviderDto"
                  }
                }
              }
            }
          }
        }
      },
      "/maps/by-venue/{vid}": {
        "get": {
          "tags": [
            "Maps"
          ],
          "operationId": "getByVenue",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MapDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/maps/by-uuid/{uuid}": {
        "get": {
          "tags": [
            "Maps"
          ],
          "operationId": "getByUuid",
          "parameters": [
            {
              "name": "uuid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/MapDto"
                  }
                }
              }
            }
          }
        }
      },
      "/locations/{mapId}/snapshot": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get location providers snapshot",
          "description": "Get the last position in the map for each location provider.\u003Cbr\u003EIf needed, you can filter by location provider's type",
          "operationId": "getSnapshot_2",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "t",
              "in": "query",
              "description": "Tollerance amount",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 15
              }
            },
            {
              "name": "ut",
              "in": "query",
              "description": "Tollerance unit",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            },
            {
              "name": "venueId",
              "in": "query",
              "description": "Venue",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/locations/{mapId}/count": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get location providers count",
          "description": "Get the count of location providers in the map.\u003Cbr\u003EIf needed, you can filter by location provider's typeYou can also specify a defined time range to filter the count",
          "operationId": "getCount",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "/locations/{mapId}/count-in-range": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get location providers count in range",
          "description": "Get the count of location providers in the map in a defined time range.\u003Cbr\u003EIf needed, you can filter by location provider's type",
          "operationId": "getCountInRange",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            },
            {
              "name": "start",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "end",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      },
      "/locations/{mapId}/count-in-bucket": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get location providers count in bucket",
          "description": "Get the count of location providers in the map in a defined time bucket.\u003Cbr\u003EIf needed, you can filter by location provider's type",
          "operationId": "getCountInBucket",
          "parameters": [
            {
              "name": "mapId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            },
            {
              "name": "start",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "end",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "step",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "ut",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PairStringLong"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/locations/positions/{venueId}": {
        "get": {
          "tags": [
            "Locations"
          ],
          "summary": "Get all positions for a venue",
          "description": "Get all positions for a venue, if tag positions history is enabled. \u003Cbr\u003ETwo couple of params are allowed: `(t, ut)` for tollerance-based query; `(start, end)` for time based query.If both are set, time based one has the precedence. \u003Cbr\u003EData are sorted by timestamp descending. \u003Cbr\u003EThere is an optional filter for the Location Provider's type",
          "operationId": "getPositions",
          "parameters": [
            {
              "name": "venueId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "t",
              "in": "query",
              "description": "Tollerance amount",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 15
              }
            },
            {
              "name": "ut",
              "in": "query",
              "description": "Tollerance unit",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "YEAR"
                ],
                "default": "MINUTE"
              }
            },
            {
              "name": "start",
              "in": "query",
              "description": "Start timestamp in milliseconds",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "end",
              "in": "query",
              "description": "End timestamp in milliseconds",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 0
              }
            },
            {
              "name": "size",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 250
              }
            },
            {
              "name": "provider_type",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "UNKNOWN",
                  "IBEACON",
                  "AOA",
                  "VIRTUAL",
                  "GPS",
                  "UWB",
                  "WIFI",
                  "RFID"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/gateways/by-venue/{vid}": {
        "get": {
          "tags": [
            "Gateways"
          ],
          "operationId": "getGatewaysByVenue",
          "parameters": [
            {
              "name": "vid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GatewayDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/gateways/by-serial/{serial}": {
        "get": {
          "tags": [
            "Gateways"
          ],
          "operationId": "getGatewayBySerial",
          "parameters": [
            {
              "name": "serial",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/GatewayDto"
                  }
                }
              }
            }
          }
        }
      },
      "/gateways/by-map/{mid}": {
        "get": {
          "tags": [
            "Gateways"
          ],
          "operationId": "getGatewaysByMap",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/GatewayDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/fences/{fid}/trackables": {
        "get": {
          "tags": [
            "Fences"
          ],
          "operationId": "getTrackables",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/fences/{fid}/providers": {
        "get": {
          "tags": [
            "Fences"
          ],
          "operationId": "getProviders",
          "parameters": [
            {
              "name": "fid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationProviderSimpleDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/features/{featureId}": {
        "get": {
          "tags": [
            "Features"
          ],
          "summary": "Get feature",
          "operationId": "get_4",
          "parameters": [
            {
              "name": "featureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/FeatureDto"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Features"
          ],
          "summary": "Delete feature",
          "operationId": "delete_7",
          "parameters": [
            {
              "name": "featureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/providers/invalidateModel/{mid}": {
        "delete": {
          "tags": [
            "Location Providers"
          ],
          "operationId": "invalidateModel",
          "parameters": [
            {
              "name": "mid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "FeatureDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "category": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "VenueCategoryDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "icon": {
              "type": "string"
            },
            "features": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FeatureDto"
              }
            }
          }
        },
        "VenueDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "timezone": {
              "type": "string"
            },
            "tagHistoryEnabled": {
              "type": "boolean"
            },
            "tagAnalyticsEnabled": {
              "type": "boolean"
            },
            "tagRetentionDays": {
              "type": "integer",
              "format": "int32"
            },
            "smartphoneHistoryEnabled": {
              "type": "boolean"
            },
            "smartphoneAnalyticsEnabled": {
              "type": "boolean"
            },
            "smartphoneRetentionDays": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingDetectionsFilter": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingDetectionsSample": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingRssiThreshold": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingSlotTime": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingAlphaNoise": {
              "type": "number",
              "format": "float"
            },
            "tagTrackingRate": {
              "type": "integer",
              "format": "int32"
            },
            "tagTrackingPositionsFilter": {
              "type": "integer",
              "format": "int32"
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VenueCategoryDto"
              }
            }
          }
        },
        "GeometryDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            }
          }
        },
        "LocationProviderSimpleDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "type": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "IBEACON",
                "AOA",
                "VIRTUAL",
                "GPS",
                "UWB",
                "WIFI",
                "RFID"
              ]
            },
            "uuid": {
              "type": "string"
            },
            "major": {
              "type": "integer",
              "format": "int32"
            },
            "minor": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "TrackableDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "geometry": {
              "$ref": "#/components/schemas/GeometryDto"
            },
            "type": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "OMLOX",
                "VIRTUAL"
              ]
            },
            "location_providers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocationProviderSimpleDto"
              }
            },
            "fenceTimeout": {
              "type": "integer",
              "format": "int32"
            },
            "toleranceArea": {
              "type": "integer",
              "format": "int32"
            },
            "toleranceTimeout": {
              "type": "integer",
              "format": "int32"
            },
            "exitDelay": {
              "type": "integer",
              "format": "int32"
            },
            "radius": {
              "type": "integer",
              "format": "int32"
            },
            "usage": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "ASSET",
                "PERSON"
              ]
            },
            "properties": {
              "type": "string"
            },
            "venue": {
              "type": "integer",
              "format": "int64"
            },
            "features": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FeatureDto"
              }
            }
          }
        },
        "RoomDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "shape": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "CIRCLE",
                "POLYGON"
              ]
            },
            "map": {
              "type": "integer",
              "format": "int64"
            },
            "vertices": {
              "type": "string"
            },
            "geometry": {
              "type": "string"
            },
            "radius": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "LocationProviderDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "uuid": {
              "type": "string"
            },
            "major": {
              "type": "integer",
              "format": "int32"
            },
            "minor": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "UNKNOWN",
                "IBEACON",
                "AOA",
                "VIRTUAL",
                "GPS",
                "UWB",
                "WIFI",
                "RFID"
              ]
            },
            "battery": {
              "type": "integer",
              "format": "int32"
            },
            "checkIn": {
              "type": "integer",
              "format": "int64"
            },
            "venue": {
              "type": "integer",
              "format": "int64"
            },
            "trackable": {
              "type": "string"
            },
            "updatedAt": {
              "type": "integer",
              "format": "int64"
            },
            "modelId": {
              "type": "integer",
              "format": "int64"
            },
            "fenceTimeout": {
              "type": "integer",
              "format": "int32"
            },
            "toleranceArea": {
              "type": "integer",
              "format": "int32"
            },
            "toleranceTimeout": {
              "type": "integer",
              "format": "int32"
            },
            "exitDelay": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "MapDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "uuid": {
              "type": "string"
            },
            "floor": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "scale": {
              "type": "number",
              "format": "double"
            },
            "outdoor": {
              "type": "boolean"
            },
            "venue": {
              "type": "integer",
              "format": "int64"
            },
            "height": {
              "type": "integer",
              "format": "int64"
            },
            "width": {
              "type": "integer",
              "format": "int64"
            },
            "crs": {
              "type": "integer",
              "format": "int32"
            },
            "venueTz": {
              "type": "string"
            }
          }
        },
        "WalkableMatrixDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "string",
              "format": "byte"
            }
          }
        },
        "GatewayDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "serial": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "x": {
              "type": "number",
              "format": "double"
            },
            "y": {
              "type": "number",
              "format": "double"
            },
            "map": {
              "type": "integer",
              "format": "int64"
            },
            "venue": {
              "type": "integer",
              "format": "int64"
            },
            "timezone": {
              "type": "string"
            },
            "features": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FeatureDto"
              }
            }
          }
        },
        "FenceDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "region": {
              "$ref": "#/components/schemas/GeometryDto"
            },
            "radius": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "timeout": {
              "type": "integer",
              "format": "int64"
            },
            "properties": {
              "type": "string"
            },
            "toleranceArea": {
              "type": "integer",
              "format": "int64"
            },
            "toleranceTimeout": {
              "type": "integer",
              "format": "int64"
            },
            "exitDelay": {
              "type": "integer",
              "format": "int64"
            },
            "crs": {
              "type": "integer",
              "format": "int32"
            },
            "map": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "GcpDto": {
          "required": [
            "lat",
            "lon",
            "x",
            "y"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "mapId": {
              "type": "integer",
              "format": "int64"
            },
            "x": {
              "type": "number",
              "format": "double"
            },
            "y": {
              "type": "number",
              "format": "double"
            },
            "lat": {
              "type": "number",
              "format": "double"
            },
            "lon": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "GcpsDto": {
          "type": "object",
          "properties": {
            "gcps": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GcpDto"
              }
            },
            "angle": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "LocationDto": {
          "type": "object",
          "properties": {
            "provider": {
              "$ref": "#/components/schemas/LocationProviderDto"
            },
            "trackable": {
              "type": "string"
            },
            "timestampGenerated": {
              "type": "integer",
              "format": "int64"
            },
            "timestampSent": {
              "type": "integer",
              "format": "int64"
            },
            "crs": {
              "type": "integer",
              "format": "int32"
            },
            "room": {
              "type": "integer",
              "format": "int64"
            },
            "map": {
              "type": "integer",
              "format": "int64"
            },
            "x": {
              "type": "number",
              "format": "double"
            },
            "y": {
              "type": "number",
              "format": "double"
            },
            "positionLabel": {
              "type": "string"
            },
            "createdAt": {
              "type": "integer",
              "format": "int64"
            },
            "rawX": {
              "type": "number",
              "format": "double"
            },
            "rawY": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "VisitDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "trackable": {
              "type": "string"
            },
            "provider": {
              "$ref": "#/components/schemas/LocationProviderSimpleDto"
            },
            "startTimestamp": {
              "type": "integer",
              "format": "int64"
            },
            "endTimestamp": {
              "type": "integer",
              "format": "int64"
            },
            "startLocalTimestamp": {
              "type": "integer",
              "format": "int64"
            },
            "endLocalTimestamp": {
              "type": "integer",
              "format": "int64"
            },
            "map": {
              "type": "integer",
              "format": "int64"
            },
            "room": {
              "type": "integer",
              "format": "int64"
            },
            "distanceFromPrevious": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "PairBooleanListVisitDto": {
          "required": [
            "first",
            "second"
          ],
          "type": "object",
          "properties": {
            "first": {
              "type": "boolean"
            },
            "second": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VisitDto"
              }
            }
          }
        },
        "PairStringLong": {
          "required": [
            "first",
            "second"
          ],
          "type": "object",
          "properties": {
            "first": {
              "type": "string"
            },
            "second": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "securitySchemes": {
        "OAuth 2.0": {
          "type": "http",
          "in": "header",
          "scheme": "Bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }